{"version":3,"file":"fds-treeview-es.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/treeviewnode.svelte","../src/treeviewnodelist.svelte","../src/styles.js","../node_modules/@fds-components/fds-helper/dist/index.js","../src/TreeView.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","<script context=\"module\">\n\n    /**\n     * Computes the depth of a tree leaf node relative to <ul role=\"tree\" />\n     * @param {HTMLLIElement} node\n     * @returns {number} depth\n     */\n    export function computeTreeLeafDepth(node) {\n        let depth = 0;\n        if (node == null) return depth\n\n        let parentNode = node.parentNode\n\n        while (parentNode != null && parentNode.getAttribute(\"role\") !== \"tree\") {\n            parentNode = parentNode.parentNode\n            if (parentNode.tagName === \"LI\") depth++\n        }\n\n        return depth;\n    }\n\n    /**\n     * Finds the nearest parent tree node\n     * @param {HTMLElement} node\n     * @returns {null | HTMLElement}\n     */\n    function findParentTreeNode(node) {\n        if (node.classList.contains(\"parent-node\")) return node\n        if (node.classList.contains(\"tree\")) return null\n        return findParentTreeNode(node.parentNode)\n    }\n</script>\n\n<script>\n    /**\n     * @typedef {string | number} TreeNodeId\n     */\n\n    export let leaf = false\n\n    /** @type {TreeNodeId} */\n    export let id = \"\"\n    export let text = \"\"\n    export let disabled = false\n    export let dragdrop=false\n    export let icon_height=12\n\n    /**\n     * Specify the icon from `carbon-icons-svelte` to render\n     * @type {typeof import(\"carbon-icons-svelte\").CarbonIcon}\n     */\n    export let icon = undefined\n    export let prependIcons=undefined\n    export let _depth\n    export let showSlot\n\n    import {afterUpdate, getContext} from \"svelte\"\n\n    let ref = null\n    let refLabel = null\n    let prevActiveId = undefined\n\n    const {\n        activeNodeId,\n        selectedNodeIds,\n        clickNode,\n        rightClickNode,\n        selectNode,\n        focusNode,\n        host,\n    } = getContext(\"TreeView\")\n    const offset = () =>\n        computeTreeLeafDepth(refLabel) + (leaf && icon ? 2 : 2.5);\n    afterUpdate(() => {\n        if (id === $activeNodeId && prevActiveId !== $activeNodeId) {\n            if (!$selectedNodeIds.includes(id)) selectNode(node);\n        }\n\n        prevActiveId = $activeNodeId;\n    });\n\n    $: node = { id, text, expanded: false, leaf };\n    $: if (refLabel) {\n        refLabel.style.marginLeft = `-${offset()}rem`;\n        refLabel.style.paddingLeft = `${offset()}rem`;\n    }\n    function dragStart(event,id) {\n        if (!dragdrop) {\n            event.preventDefault()\n            return false\n        }\n        event.dataTransfer.effectAllowed = 'move'\n        event.dataTransfer.dropEffect = 'move'\n        event.dataTransfer.setData(\"id\", id)\n        return true\n    }\n    let dropType=\"\"\n    // eslint-disable-next-line no-unused-vars\n    function dragEnter(event,id) {\n\n    }\n    // eslint-disable-next-line no-unused-vars\n    function dragLeave(event,id) {\n        dropType=\"\"\n\n    }\n    // eslint-disable-next-line no-unused-vars\n    function dragOver(event,id) {\n\n        event.dataTransfer.dropEffect = 'move'\n        let currentRect = event.target.getBoundingClientRect()\n        let y = event.clientY - currentRect.top\n        if (y<(currentRect.height/3) ) {\n            dropType=\"before\"\n        } else {\n            dropType=\"in\"\n        }\n        if (y>currentRect.height-(currentRect.height/3) ) {\n            dropType=\"after\"\n        }\n        event.preventDefault()\n        return false\n    }\n    function drop(event,id) {\n        let from=event.dataTransfer.getData(\"id\")\n        host.dispatchEvent(new CustomEvent('dropInternal', {detail:{from: from,to:id,type:dropType }}))\n        dropType=\"\"\n    }\n    let ulOpen=\"<ul>\"\n    let ulClose=\"</ul>\"\n\n</script>\n<li\n        bind:this=\"{ref}\"\n        role=\"treeitem\"\n        id=\"{id}\"\n        tabindex=\"{disabled ? undefined : -1}\"\n        aria-current=\"{id === $activeNodeId || undefined}\"\n        aria-selected=\"{disabled ? undefined : $selectedNodeIds.includes(id)}\"\n        aria-disabled=\"{disabled}\"\n        class:node=\"{true}\"\n        class:leaf-node=\"{true}\"\n        class:node--active=\"{id === $activeNodeId}\"\n        class:node--selected=\"{$selectedNodeIds.includes(id)}\"\n        class:node--disabled=\"{disabled}\"\n        class:node--with-icon=\"{icon}\"\n        on:contextmenu|stopPropagation={rightClickNode}\n        on:click|stopPropagation=\"{(e) => {\n    if (disabled) return;\n    clickNode(node,e);\n  }}\"\n        on:keydown=\"{(e) => {\n                            if (!e.target) return\n                if (e.target.tagName===\"INPUT\") return\n    if (e.key === 'ArrowLeft' || e.key === 'ArrowRight' || e.key === 'Enter') {\n      e.stopPropagation();\n    }\n\n    if (e.key === 'ArrowLeft') {\n      const parentNode = findParentTreeNode(ref.parentNode);\n      if (parentNode) parentNode.focus();\n    }\n\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      if (disabled) return;\n      clickNode(node,e);\n    }\n  }}\"\n        on:focus=\"{() => {\n    focusNode(node);\n  }}\"\n        style=\"position:relative\"\n>\n    <div     ondragover=\"return false\"\n                class:dropzoneActive=\"{dropType==='before'}\"\n             class:dropzone=\"{dropType!=='before'}\"\n\n             style=\"top:0;pointer-events: none;\"></div>\n    <div        bind:this=\"{refLabel}\" class:node__label=\"{true}\"\n                draggable=\"{dragdrop}\"\n                on:dragover={event =>  dragOver(event, id)}\n                on:dragstart={event => dragStart(event, id)}\n                on:dragenter={event => dragEnter(event, id)}\n                on:dragleave={event => dragLeave(event, id)}\n                on:drop={event => drop(event, id,ref)}\n\n                class:dragEnterNode=\"{dropType==='in'}\"\n                class:dragNode=\"{dropType!=='in'}\"\n    >\n        {#if icon}\n            <fds-icon name=\"{icon}\" height={icon_height} class=\"node__icon\"></fds-icon>\n        {/if} \n        {@html text}\n        {#if prependIcons}\n            {#each prependIcons as pIcon}<fds-icon  name={pIcon.icon} height={icon_height} style=\"margin-left:5px;--color:{pIcon.color}\"></fds-icon>{/each}\n        {/if}     \n    </div>\n    <div     ondragover=\"return false\"\n                class:dropzoneActive=\"{dropType==='after'}\"\n             class:dropzone=\"{dropType!=='after'}\"\n                 style=\"bottom:0;pointer-events: none;\"></div>\n</li>\n\n    {#if showSlot}\n        <li>\n            <div class=\"slotholder\" style=\"margin-left:-{1.4*(_depth-1)}rem\">\n                <slot name=\"content\"></slot>\n            </div>\n        </li>\n    {/if}\n","<script>\n    /**\n     * @typedef {string | number} TreeNodeId\n     * @typedef {{ id: TreeNodeId; text: string; disabled?: boolean; expanded?: boolean; }} TreeNode\n     */\n\n    /** @type {Array<TreeNode & { children?: TreeNode[] }>} */\n    export let children = []\n    export let expanded = false\n    export let root = false\n\n    /** @type {string | number} */\n    export let id = \"\"\n    export let text = \"\"\n    export let disabled = false\n    export let dragdrop=false\n    export let icon_height=12\n\n    /**\n     * Specify the icon from `carbon-icons-svelte` to render\n     * @type {typeof import(\"carbon-icons-svelte\").CarbonIcon}\n     */\n    export let icon = undefined;\n    export let prependIcons = undefined;\n    export let _depth\n    export let showSlot\n\n    import { afterUpdate, getContext } from \"svelte\";\n    //import CaretDown16 from \"carbon-icons-svelte/lib/CaretDown16/CaretDown16.svelte\";\n    import TreeViewNode, { computeTreeLeafDepth } from \"./treeviewnode.svelte\";\n\n    let ref = null;\n    let refLabel = null;\n    let prevActiveId = undefined;\n    let node\n    const {\n        activeNodeId,\n        selectedNodeIds,\n        expandedNodeIds,\n        clickNode,\n        rightClickNode,\n        selectNode,\n        expandNode,\n        focusNode,\n        toggleNode,\n        host\n    } = getContext(\"TreeView\");\n\n    const offset = () => {\n        const depth = computeTreeLeafDepth(refLabel);\n\n        if (parent) return depth + 1;\n        if (icon) return depth + 2;\n        return depth + 2.5;\n    };\n\n    afterUpdate(() => {\n        if (id === $activeNodeId && prevActiveId !== $activeNodeId) {\n            if (!$selectedNodeIds.includes(id)) selectNode(node);\n        }\n\n        prevActiveId = $activeNodeId\n    })\n\n    $: parent = Array.isArray(children);\n    $: node = { id, text, expanded, leaf: !parent }\n    $: if (refLabel) {\n        refLabel.style.marginLeft = `-${offset()}rem`\n        refLabel.style.paddingLeft = `${offset()}rem`\n    }\n    $: expanded = $expandedNodeIds.includes(id)\n\n    function dragStart(event,id) {\n        event.dataTransfer.effectAllowed = 'move'\n        event.dataTransfer.dropEffect = 'move'\n        event.dataTransfer.setData(\"id\", id)\n        return true\n    }\n    let dropType=\"\"\n    // eslint-disable-next-line no-unused-vars\n    function dragEnter(event,id) {\n\n    }\n    // eslint-disable-next-line no-unused-vars\n    function dragLeave(event,id) {\n        dropType=\"\"\n\n    }\n    // eslint-disable-next-line no-unused-vars\n    function dragOver(event,id) {\n        event.dataTransfer.dropEffect = 'move'\n        let currentRect = event.target.getBoundingClientRect()\n        let y = event.clientY - currentRect.top\n        if (y<currentRect.height/2 ) {\n            dropType=\"before\"\n        } else {\n            dropType=\"after\"\n        }\n        event.preventDefault()\n        return false\n    }\n    function drop(event,id) {\n        let from=event.dataTransfer.getData(\"id\")\n        host.dispatchEvent(new CustomEvent('dropInternal', {detail:{from: from,to:id,type:dropType }}))\n        dropType=\"\"\n    }\n    let ulOpen=\"<ul>\"\n    let ulClose=\"</ul>\"\n</script>\n{#if root}\n    {#each children as child (child.id)}\n        {#if Array.isArray(child.children)}\n            <svelte:self   {dragdrop} {...child} icon_height={icon_height}><slot slot=\"content\" name=\"content\"/></svelte:self>\n        {:else}\n            <TreeViewNode   {dragdrop} leaf {...child} icon_height={icon_height}><slot slot=\"content\" name=\"content\"/></TreeViewNode>\n        {/if}\n    {/each}\n{:else}\n    <li\n            bind:this=\"{ref}\"\n            role=\"treeitem\"\n            id=\"{id}\"\n            tabindex=\"{disabled ? undefined : -1}\"\n            aria-current=\"{id === $activeNodeId || undefined}\"\n            aria-selected=\"{disabled ? undefined : $selectedNodeIds.includes(id)}\"\n            aria-disabled=\"{disabled}\"\n            class:node=\"{true}\"\n            class:parent-node=\"{true}\"\n            class:node--active=\"{id === $activeNodeId}\"\n            class:node--selected=\"{$selectedNodeIds.includes(id)}\"\n            class:node--disabled=\"{disabled}\"\n            class:node--with-icon=\"{icon}\"\n            aria-expanded=\"{expanded}\"\n            on:click|stopPropagation=\"{(e) => {\n      if (disabled) return;\n      clickNode(node,e);\n    }}\"\n            on:keydown=\"{(e) => {\n                if (!e.target) return\n                if (e.target.tagName===\"INPUT\") return\n      if (\n        e.key === 'ArrowLeft' ||\n        e.key === 'ArrowRight' ||\n        e.key === 'Enter'\n      ) {\n        e.stopPropagation();\n      }\n\n      if (parent && e.key === 'ArrowLeft') {\n        expanded = false;\n        expandNode(node, false);\n        toggleNode(node);\n      }\n\n      if (parent && e.key === 'ArrowRight') {\n        if (expanded) {\n          ref.lastChild.firstChild.focus();\n        } else {\n          expanded = true;\n          expandNode(node, true);\n          toggleNode(node);\n        }\n      }\n\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        if (disabled) return;\n        expanded = !expanded;\n        toggleNode(node);\n        clickNode(node);\n        expandNode(node, expanded);\n        ref.focus();\n      }\n    }}\"\n            on:focus=\"{() => {\n      focusNode(node);\n    }}\"\n    on:contextmenu|stopPropagation={rightClickNode}\n            style=\"position:relative\"\n\n    >\n        <div     ondragover=\"return false\"\n                 class:dropzoneActive=\"{dropType==='before'}\"\n                 class:dropzone=\"{dropType!=='before'}\"\n                 style=\"top:0;pointer-events: none;\"></div>\n\n        <div class:node__label=\"{true}\" bind:this=\"{refLabel}\"\n\n             draggable=\"{dragdrop}\"\n             on:dragover={event =>  dragOver(event, id)}\n             on:dragstart={event => dragStart(event, id)}\n             on:dragenter={event => dragEnter(event, id)}\n             on:dragleave={event => dragLeave(event, id)}\n             on:drop={event => drop(event, id,ref)}\n\n        >\n      <span\n              class:parent-node__toggle=\"{true}\"\n              disabled=\"{disabled}\"\n              on:click=\"{() => {\n          if (disabled) return;\n          expanded = !expanded;\n          expandNode(node, expanded);\n          toggleNode(node);\n        }}\"\n      >\n\n        <span class=\"arrow   {expanded &&\n            'arrowDown'}\">▶</span>\n\n      </span>\n            <span class:node__label__details=\"{true}\">\n                {#if icon}\n                    <fds-icon class=\"node__icon\" name={icon} height={icon_height} ></fds-icon>\n                {/if}\n                {@html text}\n                {#if prependIcons}\n                    {#each prependIcons as pIcon}<fds-icon  name={pIcon.icon} height={icon_height} style=\"margin-left:5px;--color:{pIcon.color}\"></fds-icon>{/each}\n                {/if}                \n      </span>\n        </div>\n        <div     ondragover=\"return false\"\n                 class:dropzoneActive=\"{dropType==='after'}\"\n                 class:dropzone=\"{dropType!=='after'}\"\n                 style=\"bottom:0;pointer-events: none;\"></div>\n        {#if expanded}\n            <ul role=\"group\" class:node__children=\"{true}\">\n                {#each children as child (child.id)}\n                    {#if Array.isArray(child.children)}\n                        <svelte:self {dragdrop} {...child} icon_height={icon_height}><slot slot=\"content\" name=\"content\"/></svelte:self>\n                    {:else}\n                        <TreeViewNode {dragdrop} leaf {...child} icon_height={icon_height} ><slot slot=\"content\" name=\"content\"/></TreeViewNode>\n                    {/if}\n                {/each}\n            </ul>\n        {/if}\n    </li>\n\n    {#if showSlot}\n        <li>\n            <div class=\"slotholder\" style=\"margin-left:-{1.4*(_depth-1)}rem\">\n                <slot name=\"content\"></slot>\n            </div>\n        </li>\n    {/if}\n\n{/if}\n","export let stylestr = `\n\n* { box-sizing: border-box; }\n\na,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video {\n    /*! padding:0; */border:0;\n    margin:0;\n    font:inherit;\n    font-size:100%;\n    vertical-align:baseline\n}\nspan {\n cursor:pointer;\n}\ndiv {\n cursor:pointer;\n}\n.arrow {\n cursor:pointer;\n display:inline-block\n}\n\n.arrowDown {\n    transform:rotate(90deg);\n}\n\n.dropzoneActive {\n height: 1px;\n width: 150px;\n background-color: var(--drop-color,blue);\n position: absolute;\n}\n.dragEnterNode {\n    border: 1px solid var(--drop-color,blue);\n}\n.dragNode {\n    border: 1px solid transparent;\n}\nol, ul {\n    padding: 0;\n    border: 0;\n    margin: 0;\n    font: inherit;\n        font-size: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n    list-style: none;\n}\n\n.tree {\n    overflow:hidden \n}\n.tree .node {\n    padding-left:var(--spacing-05,1.4rem);\n    background-color:var(--ui-01);\n    color:var(--color,#525252)\n}\n.tree .node:focus {\n    outline:0\n}\n.tree .node:focus>.node__label {\n    /*outline:2px solid var(--focus,#0f62fe);*/\n    /*outline-offset:-2px*/\n}\n@media screen and (prefers-contrast) {\n.tree .node:focus>.node__label {\n        outline-style:dotted\n    }\n}\n.tree .node--disabled:focus>.node__label {\n    outline:0\n}\n.tree .node--disabled,\n.tree .node--disabled .node__label:hover,\n.tree .node--disabled .node__label:hover .node__label__details {\n    background-color:var(--disabled-01,#f4f4f4);\n    color:var(--disabled-02,#c6c6c6)\n}\n.tree .node--disabled .node__icon,\n.tree .node--disabled .node__label:hover .node__icon,\n.tree .node--disabled .node__label:hover .parent-node__toggle-icon,\n.tree .node--disabled .parent-node__toggle-icon {\n    fill:var(--disabled-02,#c6c6c6)\n}\n.tree .node--disabled,\n.tree .node--disabled .parent-node__toggle-icon:hover {\n    cursor:not-allowed\n}\n.tree .node__label {\n    display:flex;\n    min-height:2rem;\n    flex:1;\n    align-items:center;\n}\n.tree .node__label:hover {\n    background-color:var(--hover-color,#f9f9f9);\n    color:var(--text-01,#161616)\n}\n.tree .node__label:hover .node__label__details {\n    color:var(--text-01,#161616)\n}\n.tree .node__label:hover .node__icon,\n.tree .node__label:hover .parent-node__toggle-icon {\n    fill:var(--icon-01,#161616)\n}\n\n\n.tree .leaf-node {\n    display:flex;\n    padding-left:var(--spacing-08,2.5rem);\n    white-space: nowrap;\n}\n.tree .leaf-node.node--with-icon {\n    padding-left:var(--spacing-07,2rem)\n}\n.tree .node__label__details {\n    display:flex;\n    align-items:center\n}\n.tree .node--with-icon .parent-node__toggle {\n    /*margin-right:0*/\n}\n.tree .parent-node__toggle {\n    padding:0;\n    border:0;\n    margin-right:var(--spacing-03,.5rem)\n}\n.tree .parent-node__toggle:hover {\n    cursor:pointer\n}\n.tree .parent-node__toggle:focus {\n    outline:0\n}\n.tree .parent-node__toggle-icon {\n    fill:var(--icon-02,#525252);\n    -webkit-transform:rotate(-90deg);\n    transform:rotate(-90deg);\n    transition:110ms cubic-bezier(.2,0,.38,.9)\n}\n.tree .parent-node__toggle-icon--expanded {\n    -webkit-transform:rotate(0);\n    transform:rotate(0)\n}\n.tree .node__icon {\n    flex-shrink:0;\n    margin-right:var(--spacing-03,.5rem);\n    fill:var(--icon-02,#525252)\n}\n\n\n.tree .node--selected>.node__label {\n    background-color:var(--selected-ui,transparent);\n    color:var(--select-color,blue);\n}\n.tree .node--selected>.node__label fds-icon {\n    --color:var(--select-color,blue);\n}\n.tree .node--selected>.node__label .node__icon,\n.tree .node--selected>.node__label .parent-node__toggle-icon {\n    fill:var(--icon-01,#161616)\n}\n.tree .node--selected > .node__label:hover,\n.tree .node--selected > .node__label:hover .node__label__details {\n    color:var(--selected-hover-color,#525252);\n    background-color:var(--selected-hover-bg-color,#f9f9f9);\n}\n.tree .node--selected > .node__label:hover .node__icon,\n.tree .node--selected>.node__label:hover fds-icon,\n.tree .node--selected >.node__label:hover .parent-node__toggle-icon {\n    --color:var(--selected-hover-color,#525252);\n}\n\n.tree .node--active>.node__label {\n/*    position:relative; */\n}\n.tree .node--active>.node__label::before {\n    position:absolute;\n    top:0;\n    left:0;\n    width:.25rem;\n    height:100%;\n    /* background-color:var(--interactive-04,#0f62fe); */\n    content:\"\"\n}\n.tree--compact .node__label {\n    min-height:1.5rem\n}\n\n  \n\n\n\n`;","let path = import.meta.url\nexport default class fdsHelper {\n\n    static async getInfo(type,componentname){\n        let fetchurl = \"\";\n        let alternativefetchurl = \"\";\n        let notfound = false;\n        if(componentname){\n            componentname = componentname.replace(\"@fds-components/\",\"\");\n            fetchurl  = fdsHelper.get_href()+type+\"-\"+componentname+\".json\";\n            alternativefetchurl =  `@fds-components/${componentname}/dist/${type}-${componentname}.json`;\n        }\n\n        let res = await fetch(fetchurl)\n            .then(response => {\n                if (!response.ok) {\n                    notfound = true;\n                }\n                return response.json();\n            })\n            .then(data => {\n                if (type!==\"api\") return data\n                if (!data) return\n                if (!data.components) return data\n                return data.components[0]\n            });\n            if(notfound) {\n                res = await fetch(alternativefetchurl)\n                    .then(response => {\n                        if (!response.ok) {\n                            notfound = true;\n                        }\n                        return response.json();\n                    })\n                    .then(data => {\n                        if (type !== \"api\") return data\n                        if (!data) return\n                        if (!data.components) return data\n                        return data.components[0]\n                    });\n            }\n        return res;\n    }\n\n\n    static get_href() {\n        return new URL('./', path).href\n    }\n\n    static get_local() {\n        return new URL('./', path).pathname\n    }\n}\n","<svelte:options tag=\"fds-treeview\" accessors></svelte:options>\n<script>\n\n    /**\n     * @typedef {string | number} TreeNodeId\n     * @typedef {{ id: TreeNodeId; text: string; icon?: typeof import(\"carbon-icons-svelte\").CarbonIcon; disabled?: boolean; expanded?: boolean; }} TreeNode\n     */\n\n    /**\n     * Data in with structures with children as sub array\n     * @type {Array<TreeNode & { children?: TreeNode[] }>}\n     */\n    export let children = [];\n\n    /**\n     * Set the current active node id\n     * Only one node can be active\n     * @type {TreeNodeId}\n     */\n    export let activeid = \"\"\n    /**\n     * Allow drag & drop of tree nodes. it fires drop event after a successfully drop\n     * with from and to nodes and where it has been dropped: \"before\", \"in\" or \"after\".\n     * Default tree manipulation can be avoided by event.preventDefault()\n      * @type {boolean}\n     */\n    export let dragdrop=false\n    /**\n     * Set the node ids to be selected\n     * @type {TreeNodeId[]}\n     */\n    export let selectedids = []\n    /**\n     * Set Id of tree element to be selected\n     * @type {TreeNodeId}\n     */\n    export let selected = null;\n    /**\n     * Set Id of tree element to be open\n     * @type {TreeNodeId}\n     */\n    export let open = null;\n\n    /**\n     * Tree data\n     * @type {[]}\n     */\n\n    export let data = null;\n\n    /**\n     * Set the node ids to be expanded, all parent node ids must be expanded as well\n     * @type {TreeNodeId[]}\n     */\n    export let expandedids = [];\n\n    /**\n     * Specify the TreeView size\n     * @type {\"default\" | \"compact\"}\n     */\n    export let size = \"default\";\n\n    /**\n     *  Specify the label text\n     * @type {string}\n     */\n    export let labeltext = \"\";\n\n\n    /**\n     * Set to `true` to visually hide the label text\n     * @type {boolean}\n     */\n    export let hidelabel = false;\n    /**\n     * activate demo mode\n     * @type {boolean}\n     */\n    export let demo =true\n\n    /**\n     * height for all icons\n     * @type {integer}\n     */\n    export let icon_height=12\n\n    let demoData= [\n        {id:2,text:\"BPM\",icon: \"fas cog\",children: [\n                {id:3,text:\"Enterprise Workflow\"},\n                {id:4,text:\"Workflow for Universities\"},\n                {id:5, text:\"Helpdesk\"}\n            ], showSlot:true\n        },\n        {id:6,text:\"CMS\",children: [\n                {id:7,text:\"Enterprise Content Management\"},\n                {id:8,text:\"Powerslave Rapid Prototyping Server\"},\n                {id:9,text:\"Intranet Apps\"}\n            ]},\n        {id:10,text:\"Social\",children: [\n                {id:11,text:\"Enterprise Social Network\"},\n                {id:12,text:\"Wiki\"},\n                {id:13,text:\"Community Server\"}\n            ]},\n        {id:14,text:\"Other\",children: [\n                {id:15,text:\"Laboratory Database\",children: [\n                    {id:40,text:\"Sub entry 1\"},\n                    {id:41,text:\"Sub entry 2\"},                \n                ]},\n                {id:16,text:\"Quality Check in Development\"},\n                {id:17,text:\"flying dog UI\"}\n            ]},\n        {\n            id: 18, text: \"Technology used\", children: [\n                {id: 19, text: \"PHP\"},\n                {id: 20, text: \"Node.js\"},\n                {id: 21, text: \"Web Components\"},\n                {id: 22, text: \"Svelte\"},\n                {id: 23, text: \"Vue\"},\n                {id: 24, text: \"React\"},\n                {id: 25, text: \"WebGL\"},\n                {id: 26, text: \"Docker, Kubernets\"},\n                {id: 27, text: \"MySQL, Postgres, Oracle\"},\n                {id: 28, text: \"Windows, Linux, Cloud\"},\n                {id: 29, text: \"Git+CI\"},\n                {id: 30, text: \"PyTorch/Tensorflow\"},\n                {id: 31, text: \"STM32/Arduino\", icon: \"fas cog\"}\n            ]\n        }\n    ]\n\n\n    import { createEventDispatcher, setContext, onMount ,beforeUpdate} from \"svelte\";\n    import { writable } from \"svelte/store\";\n    import TreeViewNodeList from \"./treeviewnodelist.svelte\";\n    import {stylestr} from './styles';\n    import { get_current_component } from 'svelte/internal';\n    import fdsHelper from \"@fds-components/fds-helper\"\n    import {name, version as componentversion} from '../package.json';\n //   const path = fdsHelper.get_href()\n\n    let host = get_current_component()\n    let svelteDispatch = createEventDispatcher();\n    let demodata = false;\n    let demolabeltext=\"flying dog software\";\n    const dispatch = (name, detail) => {\n        svelteDispatch(name, detail)\n        host.dispatchEvent && host.dispatchEvent(new CustomEvent(name, { detail }))\n    }\n\n    /**\n     * Get information about component\n     * @param  {(\"api\" | \"examples\" | \"css\")} type the info type\n     */\n    export async function getInfo(type) {\n        if (type===\"version\"){\n            return new Promise(resolve => {\n                resolve(componentversion);\n            });\n        }\n        let res = await fdsHelper.getInfo(type,name);\n        return res;\n    }\n\n    /**\n     * version of component\n     * @type {string}\n     */\n    export const version = componentversion;\n\n    const labelId = `label-${Math.random().toString(36)}`\n    const activeNodeId = writable(activeid)\n    const selectedNodeIds = writable(selectedids)\n    const expandedNodeIds = writable(expandedids)\n    let stylestring = stylestr\n    let ref = null\n    let treeWalker = null\n    let styleel\n    let styleinitialized = false\n    let parentsarray = []\n\n\n    /**\n     * Triggered when the item is clicked - selected\n     * @event select\n     */\n    setContext(\"TreeView\", {\n        activeNodeId,\n        selectedNodeIds,\n        expandedNodeIds,\n        host,\n        clickNode: (node,e) => {\n            if (e.target.classList && e.target.classList.contains(\"frontIcon\")) return\n            if (e.target.classList && e.target.classList.contains(\"arrow\")) return\n            activeid = node.id;\n            selectedids = [node.id];\n            node.target = e.target.closest('.node__label');\n            dispatch(\"select\", {node});\n        },\n        /**\n         * right button click on node\n         * @event rightclick\n         */\n        rightClickNode: (e) => {\n            let elid = null;\n            if (e.path && e.path.length){\n                e.path.forEach(el=>{\n                    if(el.nodeName===\"LI\" && el.getAttribute('role')==='treeitem'){\n                        elid = parseInt(el.getAttribute('id'));\n                        e.elementid =  elid;\n                        return;\n                    }\n                });\n            }\n            if (!elid && e.originalTarget){\n\n                let el = e.originalTarget;\n                while (el.parentElement && el.parentElement.nodeName!==\"BODY\") {\n                    if(el.nodeName===\"LI\" && el.getAttribute('role')==='treeitem'){\n                        elid = parseInt(el.getAttribute('id'));\n                        e.elementid =  elid;\n                        break;\n                    }\n                    el = el.parentElement;\n                }\n            }\n            //console.log(\"right click\",e);\n            dispatch(\"rightclick\", {e});\n        },\n\n        selectNode: (node) => {\n            selectedids = [node.id];\n        },\n        expandNode: (node, expanded) => {\n            if (expanded) {\n                expandedids = [...expandedids, node.id];\n            } else {\n                expandedids = expandedids.filter((_id) => _id !== node.id);\n            }\n        },\n        focusNode: () => {},\n        /**\n         * Toggle tree element\n         * @event toggle\n         */\n        toggleNode: (node) => dispatch(\"toggle\", node),\n    })\n\n    function translateDataToTree(data) {\n        let parents = data.filter(value => value.parentId === 'undefined' || value.parentId == null)\n        let children = data.filter(value => value.parentId !== 'undefined' && value.parentId != null)\n        let translator = (parents, children) => {\n            parents.forEach((parent) => {\n                    children.forEach((current, index) => {\n                            if (current.parentId === parent.id) {\n                                let temp = JSON.parse(JSON.stringify(children))\n                                temp.splice(index, 1)\n                                translator([current], temp)\n                                typeof parent.children !== 'undefined' ? parent.children.push(current) : parent.children = [current]\n                            }\n                        }\n                    )\n                }\n            )\n        }\n        translator(parents, children)\n        return parents\n    }\n    let idToEntry={}\n    let bfs = function(tree, key, collection) {\n        if (!tree[key] || tree[key].length === 0) return\n        for (let i=0; i < tree[key].length; i++) {\n            let child = tree[key][i]\n            idToEntry[child.id]=child\n            collection[child.id] = tree.id\n            bfs(child, key, collection)\n        }\n    }\n    /**\n     * add _depth field to the whole tree (0=root)\n     * @param subTree\n     * @param depth\n     */\n    function addDepth(subTree,depth=1) {\n        if (!subTree) subTree=children\n        for (let node of subTree) {\n            node._depth=depth\n            if (node.children) addDepth(node.children,depth+1)\n        }\n    }\n\n\n\n\n    function handleKeyDown(e) {\n        if (!e.target) return\n        if (e.target.tagName===\"INPUT\") return\n        if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") e.preventDefault();\n\n        treeWalker.currentNode = e.target;\n\n        let node = null;\n\n        if (e.key === \"ArrowUp\") node = treeWalker.previousNode();\n        if (e.key === \"ArrowDown\") node = treeWalker.nextNode();\n        if (node && node !== e.target) {\n            node.tabIndex = \"0\";\n            node.focus();\n        }\n    }\n\n    function getParents(el){\n        let result = []\n        let currel = parseInt(el)\n        result.push(currel)\n        while(parentsarray[currel]){\n            result.push(parentsarray[currel])\n            currel = parentsarray[currel]\n        }\n        return result\n    }\n\n    beforeUpdate(() => {\n        if (styleel && stylestring && !styleinitialized) {\n            styleel.innerHTML = stylestring;\n            styleinitialized = true;\n        }\n    })\n\n    onMount(() => {\n\n        const firstFocusableNode = ref.querySelector(\n            \"li.node:not(.node--disabled)\"\n        );\n\n        if (firstFocusableNode != null) {\n            firstFocusableNode.tabIndex = \"0\";\n        }\n\n    });\n    $:{\n        if(dragdrop==='false') dragdrop = false\n        dragdrop = !!dragdrop;\n    }\n    $:{\n        if(demo==='false') demo = false;   \n        demo = !!demo\n    }\n    $:   if (demo) {\n        children=demoData\n        labeltext=demolabeltext\n        demodata = true;\n    }\n    $: if (data && (!children.length || demodata)){\n        demodata = false;\n        data = data.map(({parent,...rest})=>{\n                let tmp = {...rest}\n                if (parent) tmp.parentId = parent\n                return tmp\n        })\n        if(labeltext===demolabeltext) labeltext=\"\"\n        children = translateDataToTree(data)\n    }\n    $: if(children && children.length){\n        parentsarray=[]\n        idToEntry={}\n        bfs({children}, \"children\", parentsarray)\n        addDepth()\n    }\n    $: selectedids= [parseInt(selected)]\n    $: activeid = parseInt(selected)\n    $: if (open && children.length) {\n        expandedids = getParents(open)\n        //expandedids = [parseInt(open)];\n    }\n    $: activeNodeId.set(activeid)\n    $: selectedNodeIds.set(selectedids)\n    $: expandedNodeIds.set(expandedids)\n    $: if (ref) {\n        treeWalker = document.createTreeWalker(ref, NodeFilter.SHOW_ELEMENT, {\n            acceptNode: (node) => {\n                if (node.classList.contains(\"node--disabled\"))\n                    return NodeFilter.FILTER_REJECT;\n                if (node.matches(\"li.node\")) return NodeFilter.FILTER_ACCEPT;\n                return NodeFilter.FILTER_SKIP;\n            },\n        });\n    }\n\n    function findInChildren(parentEntry,id) {\n        let found=-1\n        for(let i=0;i<parentEntry.children.length;i++) {\n            let child=parentEntry.children[i]\n            if (parseInt(child.id)===parseInt(id)) {\n                found=i\n            }\n        }\n        return found\n    }\n    host.addEventListener(\"dropInternal\",(e)=>{\n        let o=e.detail\n        let fromEntry=idToEntry[o.from]\n        let toEntry=idToEntry[o.to]\n        function checkAllowed(entry,id) {\n            if (!entry.children) return true\n            if (entry.id===id) return false\n            for (let i=0;i<entry.children.length;i++) {\n                let child=entry.children[i]\n                if (child.id===id) return false\n                if (!checkAllowed(child,id)) return false\n            }\n            return true\n        }\n        if (!checkAllowed(fromEntry,o.to)) {        // drop allowed?\n            return\n        }\n        let canceled =!host.dispatchEvent(new CustomEvent('drop', {detail:{from: fromEntry,to:toEntry,type:o.type },cancelable: true}))\n        if (canceled ) return\n        /**\n         * execute drop now\n         */\n        let fromParentID=parentsarray[o.from]\n        let fromParentEntry=idToEntry[fromParentID]\n        if (!fromParentEntry) fromParentEntry={children:children}\n        let toParentID=parentsarray[o.to]\n        let toParentEntry=idToEntry[toParentID]\n        if (!toParentEntry) toParentEntry={children:children}\n\n        let found=findInChildren(fromParentEntry,o.from)\n        if (found<0) return\n        fromParentEntry.children.splice(found,1)\n        if (!fromParentEntry.children.length) fromParentEntry.children=null\n        found=findInChildren(toParentEntry,o.to)\n        if (found<0) return\n        if (o.type===\"in\") {\n            if (toEntry.children) return\n            toEntry.children=[fromEntry]\n        }\n        if (o.type===\"before\") {\n            toParentEntry.children.splice(found,0,fromEntry)\n        }\n        if (o.type===\"after\") {\n            toParentEntry.children.splice(found+1,0,fromEntry)\n        }\n        parentsarray=[]\n        bfs({children}, \"children\", parentsarray)\n        children=children\n    })\n\n\n\n</script>\n{#if !hidelabel}\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label id=\"{labelId}\" class:bx--label=\"{true}\">\n        <slot name=\"labeltext\">{@html labeltext}</slot>\n    </label>\n{/if}\n<ul\n        {...$$restProps}\n        role=\"tree\"\n        bind:this=\"{ref}\"\n        class:tree=\"{true}\"\n        class:tree--default=\"{size === 'default'}\"\n        class:tree--compact=\"{size === 'compact'}\"\n        aria-label=\"{hidelabel ? labeltext : undefined}\"\n        aria-labelledby=\"{!hidelabel ? labelId : undefined}\"\n        aria-multiselectable=\"{selectedids.length > 1 || undefined}\"\n        on:keydown\n        on:keydown|stopPropagation=\"{handleKeyDown}\"\n>\n\n    <TreeViewNodeList root children={children} icon_height={icon_height} {dragdrop}><slot slot=\"content\" name=\"content\"/></TreeViewNodeList>\n</ul>\n\n{#if stylestring}\n    <style bind:this={styleel}/>\n{/if}\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_empty","obj","keys","length","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","compute_rest_props","props","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","indexOf","set_custom_element_data","prop","set_style","important","removeProperty","setProperty","toggle_class","toggle","classList","HtmlTag","constructor","is_svg","e","n","c","html","h","m","createElementNS","svg_element","nodeName","nodeType","t","tagName","content","innerHTML","Array","from","childNodes","attribute_to_object","result","current_component","set_current_component","get_current_component","Error","afterUpdate","after_update","createEventDispatcher","type","detail","cancelable","bubbles","createEvent","initCustomEvent","custom_event","defaultPrevented","getContext","context","get","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","add","clear","fragment","before_update","outroing","outros","SvelteElement","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","Map","deltas","updates","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","get_spread_update","levels","to_null_out","accounted_for","get_spread_object","spread_props","create_component","mount_component","customElement","new_on_destroy","on_mount","map","filter","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","skip_bound","root","ready","ret","hydrate","nodes","children","l","intro","HTMLElement","super","attachShadow","mode","connectedCallback","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","$on","index","splice","$set","$$props","$$set","SvelteComponent","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","fds_icon","fds_icon_name_value","icon","color","li","div","create_if_block_2","create_if_block_1","create_if_block","div0","div1","div2","includes","computeTreeLeafDepth","depth","findParentTreeNode","contains","prevActiveId","leaf","id","disabled","dragdrop","icon_height","prependIcons","_depth","showSlot","ref","refLabel","activeNodeId","selectedNodeIds","clickNode","rightClickNode","selectNode","focusNode","host","offset","dragStart","dataTransfer","effectAllowed","dropEffect","setData","preventDefault","$activeNodeId","$selectedNodeIds","dropType","dragLeave","$$invalidate","dragOver","currentRect","getBoundingClientRect","y","clientY","top","height","drop","getData","dispatchEvent","CustomEvent","to","expanded","marginLeft","paddingLeft","$$value","focus","create_if_block_6","create_if_block_5","create_if_block_3","span0","span0_class_value","span1","span2","current","ul","show_if","isArray","expandedNodeIds","expandNode","toggleNode","parent","$expandedNodeIds","lastChild","firstChild","path","url","fdsHelper","static","componentname","fetchurl","alternativefetchurl","notfound","replace","get_href","res","fetch","response","ok","json","components","URL","href","pathname","label","ul_aria_multiselectable_value","ul_aria_label_value","if_block1","demolabeltext","findInChildren","parentEntry","found","child","parseInt","activeid","selectedids","selected","open","expandedids","labeltext","hidelabel","demo","demoData","svelteDispatch","demodata","dispatch","version","componentversion","labelId","random","toString","styleel","stylestring","treeWalker","styleinitialized","parentsarray","closest","elid","el","elementid","originalTarget","parentElement","_id","idToEntry","bfs","tree","collection","addDepth","subTree","onMount","firstFocusableNode","querySelector","tabIndex","fromEntry","toEntry","checkAllowed","entry","fromParentID","fromParentEntry","toParentID","toParentEntry","tmp","parentId","parents","translator","temp","JSON","parse","stringify","translateDataToTree","currel","getParents","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","FILTER_REJECT","matches","FILTER_ACCEPT","FILTER_SKIP","currentNode","previousNode","nextNode","async","getInfo"],"mappings":"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"}